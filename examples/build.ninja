rule as
   command = arm-none-eabi-as $cflags -o $out $in
   description = GNU ARM32 assembler $out

rule as64
   command = aarch64-none-elf-as $cflags -o $out $in
   description = GNU aarch64 assembler $out

rule readelf
   command = aarch64-none-elf-readelf -a $in > $out
   description = readelf $in

rule readelf-arch
   command = arm-none-eabi-readelf -A $in > $out
   description = readelf $in

build objects/cortex-m3-simple.o: as source/arm32/cortex-m3-simple.S
    cflags = -mcpu=cortex-m3
build info/cortex-m3-simple: readelf objects/cortex-m3-simple.o
build arch/cortex-m3-simple: readelf-arch objects/cortex-m3-simple.o

build objects/cortex-a8-simple.o: as source/arm32/cortex-a8-simple.S
    cflags = -mcpu=cortex-a8
build objects/cortex-a8-simple-fp.o: as source/arm32/cortex-a8-simple-fp.S
    cflags = -mcpu=cortex-a8
build info/cortex-a8-simple: readelf objects/cortex-a8-simple.o
build arch/cortex-a8-simple: readelf-arch objects/cortex-a8-simple.o
build arch/cortex-a8-simple-fp: readelf-arch objects/cortex-a8-simple-fp.o

build objects/cortex-a72-simple.o: as64 source/aarch64/cortex-a72-simple.S
    cflags = -mcpu=cortex-a72
build info/cortex-a72-simple: readelf objects/cortex-a72-simple.o
